"""
Django settings for bidsgui2 project.

Generated by 'django-admin startproject' using Django 2.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
import pathlib
import yaml
import dotenv
dotenv.load_dotenv(dotenv.find_dotenv())


class ServerConfigError(Exception):
    """
    A simple error to be returned if the there are issues with the configuration file for this project.
    """
    def __init__(self, filepath):
        self.file = filepath

    def __str__(self):
        message = """
        Check server config yaml file in bidsgu2/bidsgui2 folder.
        You can generate this file by first renaming server.yaml.template to server.yaml
        and then setting up the fields within to correspond to the server this is located on.
        For more help read through the instructions in server.yaml.template.
        
        This error was thrown when trying to open the following file: """
        return message + repr(self.file)


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Defining Django Settings Module
DJANGO_SETTINGS_MODULE = os.path.join(BASE_DIR, 'bidsgui2/settings.py')

# We want to mount persistent files/folders to the docker container
# Also, we want to keep the number out mounts to a minimum
# hence all the things I can think of below are mounted in the parent
# folder of where bidsgui2 lives.
getting_parent_path = pathlib.Path(BASE_DIR)
projects_parent_path = getting_parent_path.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'kb@ps&f+xze10b-(_)euuv3p2c)l-_xu=owlb03c26i*hz^imj'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'dicoms',
    'bidsgui2',
    'bootstrap4',
    'bootstrap_datepicker_plus',
    'corsheaders',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'background_task',
    'rest_framework',
    'api'
]

CORS_ORIGIN_ALLOW_ALL = True
CORS_ORIGIN_WHITELIST = [
    "https://localhost"
]

# keep corsheaders.middleware.CorsMiddleware at the top of this list
# otherwise you won't be able to post files to the server.
MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'bidsgui2.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'bidsgui2.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(projects_parent_path, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "dicoms", "static"),
)

# These values are collected from a dot env file within
# this project's directory.
# cp <project dir>/sample.env <project dir>/.env
# and fill in the variables for you system.
# The docker version of this software uses the same
# you're most likely here because you're a developer
# or you're attempting to debug what's going on inside of
# this code or the docker container.
#
# don't forget to run python manage.py makemigrations <app>
# and python manage.py migrate <app> to initilize your sqlite3 db.
# the docker version and the local version don't yet share databases
BASE_DICOM_DIR = [
    os.environ['BASE_DICOM_DIR']
    ]
LOG_PATH = os.environ['LOG_FOLDER']
CONVERTED_FOLDER = os.environ['CONVERTED_FOLDER']
DATA_UPLOAD_MAX_NUMBER_FIELDS = 1000
DCM2BIDS_FILES = os.environ['DCM2BIDS_FILES']
